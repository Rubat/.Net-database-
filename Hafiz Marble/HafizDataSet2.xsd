<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="HafizDataSet2" targetNamespace="http://tempuri.org/HafizDataSet2.xsd" xmlns:mstns="http://tempuri.org/HafizDataSet2.xsd" xmlns="http://tempuri.org/HafizDataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="HafizConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="HafizConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Hafiz_Marble.Properties.Settings.GlobalReference.Default.HafizConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StockTableAdapter" GeneratorDataComponentClassName="StockTableAdapter" Name="Stock" UserDataComponentName="StockTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="HafizConnectionString (Settings)" DbObjectName="Hafiz.dbo.Stock" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Stock] WHERE (([In_Stock_Quantity] = @Original_In_Stock_Quantity) AND ((@IsNull_Prod_ID = 1 AND [Prod_ID] IS NULL) OR ([Prod_ID] = @Original_Prod_ID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_In_Stock_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="In_Stock_Quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Prod_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Prod_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Prod_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Prod_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Stock] ([In_Stock_Quantity], [Prod_ID]) VALUES (@In_Stock_Quantity, @Prod_ID);
SELECT In_Stock_Quantity, Prod_ID FROM Stock WHERE (In_Stock_Quantity = @In_Stock_Quantity)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@In_Stock_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="In_Stock_Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Prod_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Prod_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT In_Stock_Quantity, Prod_ID FROM dbo.Stock</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Stock] SET [In_Stock_Quantity] = @In_Stock_Quantity, [Prod_ID] = @Prod_ID WHERE (([In_Stock_Quantity] = @Original_In_Stock_Quantity) AND ((@IsNull_Prod_ID = 1 AND [Prod_ID] IS NULL) OR ([Prod_ID] = @Original_Prod_ID)));
SELECT In_Stock_Quantity, Prod_ID FROM Stock WHERE (In_Stock_Quantity = @In_Stock_Quantity)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@In_Stock_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="In_Stock_Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Prod_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Prod_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_In_Stock_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="In_Stock_Quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Prod_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Prod_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Prod_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Prod_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="In_Stock_Quantity" DataSetColumn="In_Stock_Quantity" />
              <Mapping SourceColumn="Prod_ID" DataSetColumn="Prod_ID" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="HafizDataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="HafizDataSet2" msprop:Generator_UserDSName="HafizDataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Stock" msprop:Generator_TableClassName="StockDataTable" msprop:Generator_TableVarName="tableStock" msprop:Generator_TablePropName="Stock" msprop:Generator_RowDeletingName="StockRowDeleting" msprop:Generator_RowChangingName="StockRowChanging" msprop:Generator_RowEvHandlerName="StockRowChangeEventHandler" msprop:Generator_RowDeletedName="StockRowDeleted" msprop:Generator_UserTableName="Stock" msprop:Generator_RowChangedName="StockRowChanged" msprop:Generator_RowEvArgName="StockRowChangeEvent" msprop:Generator_RowClassName="StockRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="In_Stock_Quantity" msprop:Generator_ColumnVarNameInTable="columnIn_Stock_Quantity" msprop:Generator_ColumnPropNameInRow="In_Stock_Quantity" msprop:Generator_ColumnPropNameInTable="In_Stock_QuantityColumn" msprop:Generator_UserColumnName="In_Stock_Quantity" type="xs:int" />
              <xs:element name="Prod_ID" msprop:Generator_ColumnVarNameInTable="columnProd_ID" msprop:Generator_ColumnPropNameInRow="Prod_ID" msprop:Generator_ColumnPropNameInTable="Prod_IDColumn" msprop:Generator_UserColumnName="Prod_ID" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Stock" />
      <xs:field xpath="mstns:In_Stock_Quantity" />
    </xs:unique>
  </xs:element>
</xs:schema>